export const has = (Component) => ({
    Component,
    kind: 'has',
    __isFilter: true,
    toString() {
        return `has(${Component.name})`;
    },
});
export const not = (Component) => ({
    Component,
    kind: 'not',
    __isFilter: true,
    toString() {
        return `not(${Component.name})`;
    },
});
export const changed = (Component) => ({
    Component,
    kind: 'changed',
    __isFilter: true,
    toString() {
        return `changed(${Component.name})`;
    },
});
export const any = (...Components) => ({
    Components,
    kind: 'any',
    __isFilter: true,
    toString() {
        return `any(${Components.map((Comp) => Comp.name).join(', ')})`;
    },
});
export const isFilter = (thing) => thing.__isFilter === true;
export const isNotFilter = (fil) => fil.kind === 'not';
export const isHasFilter = (fil) => fil.kind === 'has';
export const isChangedFilter = (fil) => fil.kind === 'changed';
export const isAnyFilter = (fil) => fil.kind === 'any';
//# sourceMappingURL=filters.js.map